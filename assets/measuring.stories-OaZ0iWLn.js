import{r as u,R as r}from"./index-RYns6xqu.js";import{c as y}from"./index-Cm1LdsEh.js";import{X as T,Y as d,z as x}from"./utils-2YTZCScs.js";import{S,O as i,P as E,a as L}from"./paths-OTZaEske.js";import"./lodash-CcdATr5u.js";import"./index-CHvE9HB5.js";import{M as Z}from"./components-BtnTWRcn.js";import{g as _}from"./vectors-BiytCEVh.js";/* empty css              */const b=({spaceScaleType:m,enableSnapping:p})=>{var l;const[e,o]=u.useState({xOffset:0,yOffset:0,xZoomLevel:T,yZoomLevel:d,panTarget:null,mark:null});return r.createElement("div",{className:"inset-0"},r.createElement(S,{className:y("inset-0 absolute overflow-hidden p-0 m-0",e.panTarget&&"cursor-grabbing"),enableSnapping:p,operationalPoints:i,spaceOrigin:0,spaceScales:i.slice(0,-1).map((a,s)=>({from:a.position,to:i[s+1].position,...m==="linear"?{size:50*e.yZoomLevel}:{coefficient:150/e.yZoomLevel}})),timeOrigin:+new Date("2024/04/02"),timeScale:6e4/e.xZoomLevel,xOffset:e.xOffset,yOffset:e.yOffset,onClick:({data:a})=>{e.panTarget||o({...e,mark:e.mark?null:{data:a}})},onPan:({initialPosition:a,position:s,isPanning:c})=>{const{panTarget:n}=e,f=_(a,s);if(!c)o(t=>({...t,panTarget:null}));else if(!n)o(t=>({...t,panTarget:{type:"stage",initialOffset:{x:t.xOffset,y:t.yOffset}}}));else if(n.type==="stage"){const t=n.initialOffset.x+f.x,g=n.initialOffset.y+f.y;o(O=>({...O,xOffset:t,yOffset:g}))}},onZoom:a=>{o(s=>({...s,...x(e,a)}))}},E.map(a=>r.createElement(L,{key:a.id,path:a,color:a.color})),r.createElement(Z,{reference:(l=e.mark)==null?void 0:l.data})))},C={title:"SpaceTimeChart/Measuring times and distances",component:b,argTypes:{spaceScaleType:{name:"Space scaling type",options:["linear","proportional"],defaultValue:"linear",control:{type:"radio"}},enableSnapping:{name:"Enable snapping to closest points?",defaultValue:!0,control:{type:"boolean"}}}},R={name:"Default arguments",args:{spaceScaleType:"linear",enableSnapping:!0}},h=["DefaultArgs"];export{R as DefaultArgs,h as __namedExportsOrder,C as default};
