import{r as f,R as u}from"./index-RYns6xqu.js";import{c as F}from"./index-Cm1LdsEh.js";import{l as O}from"./lodash-CcdATr5u.js";import{X as S,Y as h,z as P}from"./utils-2YTZCScs.js";import{g as C,S as D,M as l,a as b,K as Z}from"./paths-OTZaEske.js";import"./index-CHvE9HB5.js";import{g as _}from"./vectors-BiytCEVh.js";/* empty css              */const d=+new Date("2024/01/01"),L=["#9E8256","#FF362E","#FF8E3D","#FFBF00","#95C877","#78E6C5","#66C0F1","#526CE8","#D16DBC","#FF9BC6"],R=({operationalPointsCount:m,trainTypes:p,pathsPerTrain:g,spaceScaleType:x})=>{const n=f.useMemo(()=>{let e=0;return O.range(m).map(t=>({id:`op-${t}`,label:`Operational point n°${t+1}`,position:e+=O.random(5e4,15e4),importanceLevel:!t||t===m-1||Math.random()>.8?1:2}))},[m]),M=f.useMemo(()=>{const e=n,t=e.filter(a=>a.importanceLevel===1),c=e.slice(0).reverse(),r=t.slice(0).reverse();return O.range(p).flatMap(a=>{const s=a%2,i=Math.floor(a/2)%2,v=(100+100*(Math.floor(a/2)/Math.floor(p/2)))*Z/(60*l);return C(`type n°${a}`,i?s?c:e:s?r:t,5*l,(30+a*5)*l,v*(s?-1:1),g,d,{color:L[a%L.length],fromEnd:i?"out":"stop",toEnd:i?"out":"stop"})})},[n,p,g]),[o,E]=f.useState({xOffset:0,yOffset:0,xZoomLevel:S,yZoomLevel:h,panning:null});return u.createElement("div",{className:"inset-0"},u.createElement(D,{className:F("inset-0 absolute p-0 m-0",o.panning&&"cursor-grabbing"),operationalPoints:n,spaceOrigin:0,spaceScales:n.slice(0,-1).map((e,t)=>({from:e.position,to:n[t+1].position,...x==="linear"?{size:50*o.yZoomLevel}:{coefficient:150/o.yZoomLevel}})),timeOrigin:d,timeScale:l/o.xZoomLevel,xOffset:o.xOffset,yOffset:o.yOffset,onPan:({initialPosition:e,position:t,isPanning:c})=>{const{panning:r}=o,a=_(e,t);E(s=>{if(c)if(r){const i=r.initialOffset.x+a.x,y=r.initialOffset.y+a.y;return{...o,xOffset:i,yOffset:y}}else return{...s,panning:{initialOffset:{x:o.xOffset,y:o.yOffset}}};else return{...s,panning:null}})},onZoom:e=>{E(t=>({...t,...P(o,e)}))}},M.map(e=>u.createElement(b,{key:e.id,path:e,color:e.color}))))},X={title:"SpaceTimeChart/Performances",component:R,argTypes:{operationalPointsCount:{name:"Operational points",defaultValue:5,control:{type:"number",step:1,min:2,max:30}},trainTypes:{name:"Train types",defaultValue:4,control:{type:"number",step:1,min:1,max:20}},pathsPerTrain:{name:"Paths per train type",defaultValue:50,control:{type:"number",step:10,min:0,max:200}},spaceScaleType:{name:"Space scaling type",options:["linear","proportional"],defaultValue:"linear",control:{type:"radio"}}}},Y={name:"Default arguments",args:{operationalPointsCount:5,trainTypes:4,pathsPerTrain:50,spaceScaleType:"linear"}},k=["DefaultArgs"];export{Y as DefaultArgs,k as __namedExportsOrder,X as default};
