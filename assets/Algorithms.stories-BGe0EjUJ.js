import{R as t,r as p}from"./index-RYns6xqu.js";import{f as h,S as i,L as l}from"./index-zQP5iNEI.js";import{u as g,L as f,g as y,B as S,O as u,W as E,a as b,P as T,b as m,D as e}from"./useAsyncMemo-BmowEZ6y.js";import"./iframe-CXcauK7T.js";import"../sb-preview/runtime.js";import"./index-BwmuJAIN.js";import"./lodash-CcdATr5u.js";const c=[b],A={id:"path-layer",source:"path",type:"line",paint:{"line-width":1,"line-color":"blue"}},P=({path:r,warpingOptions:a})=>{const{grid:s,warpedGrid:n}=p.useMemo(()=>y(r,a),[r,a]),o=p.useMemo(()=>h([r]),[r]);return t.createElement("div",{style:{background:"lightgrey",display:"flex",flexDirection:"row",alignItems:"stretch",position:"absolute",inset:0}},t.createElement("div",{style:{marginRight:"1em",flexGrow:1}},t.createElement(S,{path:r,sources:c,mapStyle:u},t.createElement(i,{type:"geojson",data:o},t.createElement(l,{id:"path-layer",source:"path",type:"line",paint:{"line-width":1,"line-color":"blue"}})),t.createElement(i,{type:"geojson",data:s},t.createElement(l,{id:"grid-layer",source:"grid",type:"line",paint:{"line-width":1,"line-color":"red"}})))),t.createElement("div",{style:{flexGrow:1}},t.createElement(E,{log:!0,path:r,pathLayer:A,sources:c,mapStyle:u,warpingOptions:a},t.createElement(i,{type:"geojson",data:n},t.createElement(l,{id:"grid-layer",source:"grid",type:"line",paint:{"line-width":1,"line-color":"red"}})))))},V=r=>{const{path:a,...s}=r,n=g(()=>fetch(`./${a}.json`).then(d=>d.json()),[a]),o=n.type==="ready"?n.data:null;return o?t.createElement(P,{key:a,path:o,warpingOptions:s}):t.createElement(f,null)},I={component:V,title:"WarpedMap/Algorithms",argTypes:{path:{name:"Path",description:"Which path to warp on",options:T,defaultValue:m,control:{type:"radio"}},tolerance:{name:"Tolerance",description:"The tolerance for turf.simplify",defaultValue:e.tolerance,type:"number",control:{type:"range",min:0,max:1,step:.005,defaultValue:e.tolerance}},stripsPerSide:{name:"Strips per side",description:"The number of strips on each side of the grid",defaultValue:e.stripsPerSide,type:"number",control:{type:"number",min:1,step:1,defaultValue:e.stripsPerSide}},samplesCount:{name:"Samples count",description:"The number of samples on the grid",defaultValue:e.samplesCount,type:"number",control:{type:"number",min:3,step:1,defaultValue:e.samplesCount}},straightenForce:{name:"Straighten force",description:"The strength of the force to strengthen on.",defaultValue:e.straightenForce,type:"number",control:{type:"range",min:0,max:1,step:.005,defaultValue:e.straightenForce}},straightenIterations:{name:"Straighten iterations",description:"The number of strenghtening iterations.",defaultValue:e.straightenIterations,type:"number",control:{type:"number",min:1,step:1,defaultValue:e.straightenIterations}},quadtreeDepth:{name:"Quadtree depth",description:"The maximum depth of the quadtree",defaultValue:e.quadtreeDepth,type:"number",control:{type:"number",min:1,step:1,defaultValue:e.quadtreeDepth}}}},O={name:"Default settings",args:{path:m,tolerance:e.tolerance,stripsPerSide:e.stripsPerSide,samplesCount:e.samplesCount,straightenForce:e.straightenForce,straightenIterations:e.straightenIterations,quadtreeDepth:e.quadtreeDepth}},R=["DefaultSettings"];export{O as DefaultSettings,R as __namedExportsOrder,I as default};
