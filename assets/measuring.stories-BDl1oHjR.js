import{r as T,R as o}from"./index-RYns6xqu.js";import{c as x}from"./index-Cm1LdsEh.js";import{X as E,Y as L,z as b}from"./utils-BdV3spGV.js";import{S as Z,O as l,P as _,a as k}from"./paths-BB683TMT.js";import"./lodash-CcdATr5u.js";import"./index-CHvE9HB5.js";import{M as P}from"./components-BNWsAftZ.js";import{g as D}from"./vectors-BMNFZSin.js";/* empty css              */const v=({spaceScaleType:u,enableSnapping:O})=>{var p;const[e,s]=T.useState({xOffset:0,yOffset:0,xZoomLevel:E,yZoomLevel:L,panTarget:null,mark:null});return o.createElement("div",{className:"inset-0"},o.createElement(Z,{className:x("inset-0 absolute overflow-hidden p-0 m-0",e.panTarget&&"cursor-grabbing"),enableSnapping:O,operationalPoints:l,spaceOrigin:0,spaceScales:l.slice(0,-1).map((a,r)=>({from:a.position,to:l[r+1].position,...u==="linear"?{size:50*e.yZoomLevel}:{coefficient:150/e.yZoomLevel}})),timeOrigin:+new Date("2024/04/02"),timeScale:6e4/e.xZoomLevel,xOffset:e.xOffset,yOffset:e.yOffset,onClick:({data:a})=>{e.panTarget||s({...e,mark:e.mark?null:{data:a}})},onPan:({initialPosition:a,position:r,isPanning:y})=>{const{panTarget:n}=e,m=D(a,r);if(!y)s(t=>({...t,panTarget:null}));else if(!n)s(t=>({...t,panTarget:{type:"stage",initialOffset:{x:t.xOffset,y:t.yOffset}}}));else if(n.type==="stage"){const t=n.initialOffset.x+m.x,d=n.initialOffset.y+m.y;s(S=>({...S,xOffset:t,yOffset:d}))}},onZoom:a=>{s(r=>({...r,...b(e,a)}))}},_.map(a=>o.createElement(k,{key:a.id,path:a,color:a.color})),o.createElement(P,{reference:(p=e.mark)==null?void 0:p.data})))},I={title:"SpaceTimeChart/Measuring times and distances",component:v,argTypes:{spaceScaleType:{name:"Space scaling type",options:["linear","proportional"],defaultValue:"linear",control:{type:"radio"}},enableSnapping:{name:"Enable snapping to closest points?",defaultValue:!0,control:{type:"boolean"}}}},i={name:"Default arguments",args:{spaceScaleType:"linear",enableSnapping:!0}};var c,f,g;i.parameters={...i.parameters,docs:{...(c=i.parameters)==null?void 0:c.docs,source:{originalSource:`{
  name: 'Default arguments',
  args: {
    spaceScaleType: 'linear',
    enableSnapping: true
  }
}`,...(g=(f=i.parameters)==null?void 0:f.docs)==null?void 0:g.source}}};const X=["DefaultArgs"];export{i as DefaultArgs,X as __namedExportsOrder,I as default};
