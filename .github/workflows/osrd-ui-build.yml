name: Build osrd-ui

on:
  pull_request:
  workflow_dispatch:
  merge_group:
    types: [checks_requested]
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Build project
        run: |
          npm ci
          npm run build

      - name: Check code linting
        run: |
          if ! npm run lint; then
            echo "Linting failed"
            exit 1
          fi

  check_commits:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags

    - name: Check commit names
      run: |
        # We don't have a base ref to check against if we aren't in a
        # pull_request workflow.
        BASE=${{ github.base_ref }}
        if [[ -z "$BASE" ]]; then
          exit 0
        fi

        commit_titles() {
          git log --format=%s origin/"$BASE"..HEAD --skip=1
        }

        commit_titles | TERM=xterm-color .github/scripts/check-commit-titles.sh

  final_newline_lint:
    runs-on: ubuntu-latest
    name: Check final newline
    steps:
      - name: Install ripgrep
        run: sudo apt-get install -y ripgrep
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check final newline is present
        run: |
          # search missing final newline
          if rg -Ul '[^\n]\z' -g '!*.svg' .; then
            echo "Found missing final newline on listed file(s)"
            exit 1
          fi

          # search multiple final newlines
          if rg -Ul '\n\n\z' .; then
            echo "Found multiple final newlines on listed file(s)"
            exit 1
          fi

  check_unit_tests:
    runs-on: ubuntu-latest
    name: Check unit tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install vitest
        run: npm install vitest
      - name: Check tests
        run: |
          if ! npm run test; then
            echo "Tests failed"
            exit 1
          fi

  check_reuse_compliance:
    runs-on: ubuntu-latest
    name: Check REUSE Compliance
    steps:
      - uses: actions/checkout@v4
      - name: REUSE Compliance Check
        uses: fsfe/reuse-action@v4

  check_dco:
    runs-on: ubuntu-latest
    name: Check DCO
    steps:
      - name: DCO Compliance Check
        uses: christophebedard/dco-check@0.5.0
        with:
          args: --exclude-emails '49699333+dependabot[bot]@users.noreply.github.com'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

